[build-system]
requires = ["setuptools>=65.0", "wheel", "pybind11>=2.10.0"]
build-backend = "setuptools.build_meta"

[project]
name = "openkernel"
version = "1.0.0"
description = "Advanced CUDA Kernel Development & AI Training Infrastructure Toolkit"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"}
]
maintainers = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"}
]
keywords = [
    "cuda", "gpu", "ai", "machine-learning", "deep-learning", 
    "distributed-training", "inference-optimization", "kernels",
    "high-performance-computing", "research-framework"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: C++",
    "Programming Language :: Other",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing"
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "rich>=12.0.0",
    "click>=8.0.0",
    "typing-extensions>=4.0.0",
    "scipy>=1.8.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pybind11>=2.10.0",
    "psutil>=5.9.0",
    "jsonschema>=4.0.0",
    "pyyaml>=6.0",
    "aiofiles>=22.0.0"
]

[project.optional-dependencies]
cuda = [
    "cupy-cuda11x>=11.0.0; sys_platform != 'darwin'",
    "jax[cuda]>=0.4.0; sys_platform != 'darwin'"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "isort>=5.10.0",
    "bandit>=1.7.0",
    "safety>=2.0.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinxcontrib-napoleon>=0.7",
    "myst-parser>=0.18.0"
]
monitoring = [
    "gpustat>=1.0.0",
    "tensorboard>=2.10.0",
    "wandb>=0.13.0"
]

[project.urls]
Homepage = "https://github.com/openkernel/openkernel"
Documentation = "https://openkernel.readthedocs.io"
Repository = "https://github.com/openkernel/openkernel.git"
Issues = "https://github.com/openkernel/openkernel/issues"
Changelog = "https://github.com/openkernel/openkernel/blob/main/CHANGELOG.md"

[project.scripts]
openkernel = "openkernel.cli:main"
openkernel-benchmark = "openkernel.cli:benchmark_main"
openkernel-train = "openkernel.cli:train_main"

[tool.setuptools.packages.find]
where = ["."]
include = ["openkernel*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
openkernel = ["*.cu", "*.cuh", "kernels/*.cu", "kernels/*.cuh", "py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["openkernel"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "cupy.*",
    "jax.*",
    "rich.*",
    "click.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=openkernel",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=50"
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
    "distributed: marks tests that require multiple processes"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

[tool.coverage.run]
source = ["openkernel"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
per-file-ignores = [
    "__init__.py:F401"
] 